import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by qmltyperegistrar.

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "QQuickTableViewAttached"
        prototype: "QObject"
        Property { name: "view"; type: "QQuickTableView"; isReadonly: true; isPointer: true }
        Signal { name: "pooled" }
        Signal { name: "reused" }
    }
    Component {
        file: "qquicktreeview_p.h"
        name: "QQuickTableView"
        defaultProperty: "flickableData"
        prototype: "QQuickFlickable"
        Property { name: "rows"; type: "int"; isReadonly: true }
        Property { name: "columns"; type: "int"; isReadonly: true }
        Property { name: "rowSpacing"; type: "double" }
        Property { name: "columnSpacing"; type: "double" }
        Property { name: "rowHeightProvider"; type: "QJSValue" }
        Property { name: "columnWidthProvider"; type: "QJSValue" }
        Property { name: "model"; type: "QVariant" }
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "reuseItems"; type: "bool" }
        Property { name: "contentWidth"; type: "double" }
        Property { name: "contentHeight"; type: "double" }
        Property { name: "syncView"; revision: 14; type: "QQuickTableView"; isPointer: true }
        Property { name: "syncDirection"; revision: 14; type: "Qt::Orientations" }
        Signal { name: "syncViewChanged"; revision: 14 }
        Signal { name: "syncDirectionChanged"; revision: 14 }
        Method { name: "_q_componentFinalized" }
        Method { name: "forceLayout" }
    }
    Component {
        file: "qquicktreeview_p.h"
        name: "QQuickTreeView"
        prototype: "QQuickTableView"
        exports: ["QtQuick.TreeView/TreeViewTemplate 2.15"]
        exportMetaObjectRevisions: [15]
        attachedType: "QQuickTreeViewAttached"
        Enum {
            name: "NavigateMode"
            values: ["List", "Table"]
        }
        Property { name: "currentIndex"; type: "QModelIndex" }
        Property { name: "currentModelIndex"; type: "QModelIndex" }
        Property { name: "currentItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "navigationMode"; type: "NavigateMode" }
        Property {
            name: "styleHints"
            type: "QQuickTreeViewStyleHints"
            isReadonly: true
            isPointer: true
        }
        Signal {
            name: "expanded"
            Parameter { name: "row"; type: "int" }
        }
        Signal {
            name: "collapsed"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "hasSiblings"
            type: "bool"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "depth"
            type: "int"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "isExpanded"
            type: "bool"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "expand"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "collapse"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "toggleExpanded"
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "isModelIndexExpanded"
            type: "bool"
            Parameter { name: "modelIndex"; type: "QModelIndex" }
        }
        Method {
            name: "collapseModelIndex"
            Parameter { name: "modelIndex"; type: "QModelIndex" }
        }
        Method {
            name: "expandModelIndex"
            Parameter { name: "modelIndex"; type: "QModelIndex" }
        }
        Method {
            name: "toggleModelIndexExpanded"
            Parameter { name: "modelIndex"; type: "QModelIndex" }
        }
        Method {
            name: "columnAtX"
            type: "int"
            Parameter { name: "x"; type: "int" }
            Parameter { name: "includeSpacing"; type: "bool" }
        }
        Method {
            name: "rowAtY"
            type: "int"
            Parameter { name: "y"; type: "int" }
            Parameter { name: "includeSpacing"; type: "bool" }
        }
        Method {
            name: "itemAtCell"
            type: "QQuickItem*"
            Parameter { name: "cell"; type: "QPoint" }
        }
        Method {
            name: "itemAtIndex"
            type: "QQuickItem*"
            Parameter { name: "viewIndex"; type: "QModelIndex" }
        }
        Method {
            name: "itemAtModelIndex"
            type: "QQuickItem*"
            Parameter { name: "modelIndex"; type: "QModelIndex" }
        }
        Method {
            name: "viewIndex"
            type: "QModelIndex"
            Parameter { name: "column"; type: "int" }
            Parameter { name: "row"; type: "int" }
        }
        Method {
            name: "mapToModel"
            type: "QModelIndex"
            Parameter { name: "viewIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapFromModel"
            type: "QModelIndex"
            Parameter { name: "modelIndex"; type: "QModelIndex" }
        }
    }
    Component {
        name: "QQuickTreeViewAttached"
        prototype: "QQuickTableViewAttached"
        Property { name: "view"; type: "QQuickTreeView"; isReadonly: true; isPointer: true }
        Property { name: "hasChildren"; type: "bool"; isReadonly: true }
        Property { name: "isExpanded"; type: "bool"; isReadonly: true }
        Property { name: "depth"; type: "int"; isReadonly: true }
    }
    Component {
        file: "qquicktreeview_p.h"
        name: "QQuickTreeViewStyleHints"
        prototype: "QObject"
        exports: ["QtQuick.TreeView/TreeViewStyleHints 2.15"]
        isCreatable: false
        exportMetaObjectRevisions: [15]
        Property { name: "indicator"; type: "QColor"; isReadonly: true }
        Property { name: "indicatorCurrent"; type: "QColor"; isReadonly: true }
        Property { name: "indicatorHovered"; type: "QColor"; isReadonly: true }
        Property { name: "overlay"; type: "QColor"; isReadonly: true }
        Property { name: "overlayHovered"; type: "QColor"; isReadonly: true }
        Property { name: "foregroundOdd"; type: "QColor"; isReadonly: true }
        Property { name: "backgroundOdd"; type: "QColor"; isReadonly: true }
        Property { name: "foregroundEven"; type: "QColor"; isReadonly: true }
        Property { name: "backgroundEven"; type: "QColor"; isReadonly: true }
        Property { name: "foregroundCurrent"; type: "QColor"; isReadonly: true }
        Property { name: "backgroundCurrent"; type: "QColor"; isReadonly: true }
        Property { name: "foregroundHovered"; type: "QColor"; isReadonly: true }
        Property { name: "backgroundHovered"; type: "QColor"; isReadonly: true }
        Property { name: "indent"; type: "double"; isReadonly: true }
        Property { name: "columnPadding"; type: "double"; isReadonly: true }
        Property { name: "font"; type: "QFont"; isReadonly: true }
    }
}
