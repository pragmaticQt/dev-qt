#ifndef REP_QIVIPAGINGMODEL_REPLICA_H
#define REP_QIVIPAGINGMODEL_REPLICA_H

// This is an autogenerated file.
// Do not edit this file, any changes made will be lost the next time it is generated.

#include <QtCore/qobject.h>
#include <QtCore/qdatastream.h>
#include <QtCore/qvariant.h>
#include <QtCore/qmetatype.h>

#include <QtRemoteObjects/qremoteobjectnode.h>
#include <QtRemoteObjects/qremoteobjectpendingcall.h>
#include <QtRemoteObjects/qremoteobjectreplica.h>

#include <QtIviCore/QtIviCoreModule>

#include <QUuid>

class QIviPagingModelReplica : public QRemoteObjectReplica
{
    Q_OBJECT
    Q_CLASSINFO(QCLASSINFO_REMOTEOBJECT_TYPE, "QIviPagingModel")
    Q_CLASSINFO(QCLASSINFO_REMOTEOBJECT_SIGNATURE, "6deef7129923f33f59e10b0b0ceb0a417f87c31a")

public:
    QIviPagingModelReplica() : QRemoteObjectReplica() { initialize(); }
    static void registerMetatypes()
    {
        static bool initialized = false;
        if (initialized)
            return;
        initialized = true;
        qRegisterMetaType<QtIviCoreModule::ModelCapabilities>();
        qRegisterMetaTypeStreamOperators<QtIviCoreModule::ModelCapabilities>();
        qRegisterMetaType<QRemoteObjectPendingCall>();
        qRegisterMetaType<QRemoteObjectPendingReply<void>>();
        if (!QMetaType::hasRegisteredConverterFunction<QRemoteObjectPendingReply<void>, QRemoteObjectPendingCall>())
            QMetaType::registerConverter<QRemoteObjectPendingReply<void>, QRemoteObjectPendingCall>();

    }

private:
    QIviPagingModelReplica(QRemoteObjectNode *node, const QString &name = QString())
        : QRemoteObjectReplica(ConstructWithNode)
    {
        initializeNode(node, name);
    }

    void initialize() override
    {
        QIviPagingModelReplica::registerMetatypes();
        QVariantList properties;
        properties.reserve(0);
        setProperties(properties);
    }

public:
    ~QIviPagingModelReplica() override = default;


Q_SIGNALS:
    void supportedCapabilitiesChanged(const QUuid & identifier, QtIviCoreModule::ModelCapabilities capabilities);
    void countChanged(const QUuid & identifier, int newLength);
    void dataFetched(const QUuid & identifier, const QList<QVariant> & data, int start, bool moreAvailable);
    void dataChanged(const QUuid & identifier, const QList<QVariant> & data, int start, int count);

public Q_SLOTS:
    void registerInstance(const QUuid & identifier)
    {
        static int __repc_index = QIviPagingModelReplica::staticMetaObject.indexOfSlot("registerInstance(QUuid)");
        QVariantList __repc_args;
        __repc_args
            << QVariant::fromValue(identifier)
        ;
        send(QMetaObject::InvokeMetaMethod, __repc_index, __repc_args);
    }
    void unregisterInstance(const QUuid & identifier)
    {
        static int __repc_index = QIviPagingModelReplica::staticMetaObject.indexOfSlot("unregisterInstance(QUuid)");
        QVariantList __repc_args;
        __repc_args
            << QVariant::fromValue(identifier)
        ;
        send(QMetaObject::InvokeMetaMethod, __repc_index, __repc_args);
    }
    void fetchData(const QUuid & identifier, int start, int count)
    {
        static int __repc_index = QIviPagingModelReplica::staticMetaObject.indexOfSlot("fetchData(QUuid,int,int)");
        QVariantList __repc_args;
        __repc_args
            << QVariant::fromValue(identifier)
            << QVariant::fromValue(start)
            << QVariant::fromValue(count)
        ;
        send(QMetaObject::InvokeMetaMethod, __repc_index, __repc_args);
    }

private:
    friend class QT_PREPEND_NAMESPACE(QRemoteObjectNode);
};


QT_BEGIN_NAMESPACE
QT_END_NAMESPACE


#endif // REP_QIVIPAGINGMODEL_REPLICA_H
